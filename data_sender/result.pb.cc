// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: result.proto
// Protobuf C++ Version: 5.27.3

#include "result.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr constellation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : real_{},
        imag_{},
        ref_real_{},
        ref_imag_{},
        field_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR constellation::constellation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct constellationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR constellationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~constellationDefaultTypeInternal() {}
  union {
    constellation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 constellationDefaultTypeInternal _constellation_default_instance_;

inline constexpr EVM::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : field_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        evm_rms_{0},
        evm_max_{0},
        evm_min_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EVM::EVM(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EVMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EVMDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EVMDefaultTypeInternal() {}
  union {
    EVM _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EVMDefaultTypeInternal _EVM_default_instance_;

inline constexpr result::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : spectrum_{},
        evm_res_{},
        evm_vs_symbol_{},
        evm_vs_rb_{},
        constellation_data_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR result::result(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct resultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR resultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~resultDefaultTypeInternal() {}
  union {
    result _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 resultDefaultTypeInternal _result_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_result_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_result_2eproto = nullptr;
const ::uint32_t
    TableStruct_result_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::EVM, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::EVM, _impl_.field_),
        PROTOBUF_FIELD_OFFSET(::EVM, _impl_.evm_rms_),
        PROTOBUF_FIELD_OFFSET(::EVM, _impl_.evm_max_),
        PROTOBUF_FIELD_OFFSET(::EVM, _impl_.evm_min_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::constellation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::constellation, _impl_.field_),
        PROTOBUF_FIELD_OFFSET(::constellation, _impl_.real_),
        PROTOBUF_FIELD_OFFSET(::constellation, _impl_.imag_),
        PROTOBUF_FIELD_OFFSET(::constellation, _impl_.ref_real_),
        PROTOBUF_FIELD_OFFSET(::constellation, _impl_.ref_imag_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::result, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::result, _impl_.spectrum_),
        PROTOBUF_FIELD_OFFSET(::result, _impl_.evm_res_),
        PROTOBUF_FIELD_OFFSET(::result, _impl_.evm_vs_symbol_),
        PROTOBUF_FIELD_OFFSET(::result, _impl_.evm_vs_rb_),
        PROTOBUF_FIELD_OFFSET(::result, _impl_.constellation_data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::EVM)},
        {12, -1, -1, sizeof(::constellation)},
        {25, -1, -1, sizeof(::result)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_EVM_default_instance_._instance,
    &::_constellation_default_instance_._instance,
    &::_result_default_instance_._instance,
};
const char descriptor_table_protodef_result_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014result.proto\"G\n\003EVM\022\r\n\005field\030\001 \001(\t\022\017\n\007"
    "evm_rms\030\002 \001(\002\022\017\n\007evm_max\030\003 \001(\002\022\017\n\007evm_mi"
    "n\030\004 \001(\002\"^\n\rconstellation\022\r\n\005field\030\001 \001(\t\022"
    "\014\n\004real\030\002 \003(\002\022\014\n\004imag\030\003 \003(\002\022\020\n\010ref_real\030"
    "\004 \003(\002\022\020\n\010ref_imag\030\005 \003(\002\"\207\001\n\006result\022\020\n\010sp"
    "ectrum\030\001 \003(\002\022\025\n\007evm_res\030\002 \003(\0132\004.EVM\022\025\n\re"
    "vm_vs_symbol\030\003 \003(\002\022\021\n\tevm_vs_rb\030\004 \003(\002\022*\n"
    "\022constellation_data\030\005 \003(\0132\016.constellatio"
    "nb\006proto3"
};
static ::absl::once_flag descriptor_table_result_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_result_2eproto = {
    false,
    false,
    329,
    descriptor_table_protodef_result_2eproto,
    "result.proto",
    &descriptor_table_result_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_result_2eproto::offsets,
    file_level_enum_descriptors_result_2eproto,
    file_level_service_descriptors_result_2eproto,
};
// ===================================================================

class EVM::_Internal {
 public:
};

EVM::EVM(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EVM)
}
inline PROTOBUF_NDEBUG_INLINE EVM::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::EVM& from_msg)
      : field_(arena, from.field_),
        _cached_size_{0} {}

EVM::EVM(
    ::google::protobuf::Arena* arena,
    const EVM& from)
    : ::google::protobuf::Message(arena) {
  EVM* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, evm_rms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, evm_rms_),
           offsetof(Impl_, evm_min_) -
               offsetof(Impl_, evm_rms_) +
               sizeof(Impl_::evm_min_));

  // @@protoc_insertion_point(copy_constructor:EVM)
}
inline PROTOBUF_NDEBUG_INLINE EVM::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : field_(arena),
        _cached_size_{0} {}

inline void EVM::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, evm_rms_),
           0,
           offsetof(Impl_, evm_min_) -
               offsetof(Impl_, evm_rms_) +
               sizeof(Impl_::evm_min_));
}
EVM::~EVM() {
  // @@protoc_insertion_point(destructor:EVM)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EVM::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.field_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EVM::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(EVM, _impl_._cached_size_),
              false,
          },
          &EVM::MergeImpl,
          &EVM::kDescriptorMethods,
          &descriptor_table_result_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 17, 2> EVM::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EVM_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::EVM>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float evm_min = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(EVM, _impl_.evm_min_)}},
    // string field = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EVM, _impl_.field_)}},
    // float evm_rms = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(EVM, _impl_.evm_rms_)}},
    // float evm_max = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(EVM, _impl_.evm_max_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string field = 1;
    {PROTOBUF_FIELD_OFFSET(EVM, _impl_.field_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float evm_rms = 2;
    {PROTOBUF_FIELD_OFFSET(EVM, _impl_.evm_rms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float evm_max = 3;
    {PROTOBUF_FIELD_OFFSET(EVM, _impl_.evm_max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float evm_min = 4;
    {PROTOBUF_FIELD_OFFSET(EVM, _impl_.evm_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\3\5\0\0\0\0\0\0"
    "EVM"
    "field"
  }},
};

PROTOBUF_NOINLINE void EVM::Clear() {
// @@protoc_insertion_point(message_clear_start:EVM)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_.ClearToEmpty();
  ::memset(&_impl_.evm_rms_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.evm_min_) -
      reinterpret_cast<char*>(&_impl_.evm_rms_)) + sizeof(_impl_.evm_min_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* EVM::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EVM)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    const std::string& _s = this->_internal_field();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "EVM.field");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // float evm_rms = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_evm_rms = this->_internal_evm_rms();
  ::uint32_t raw_evm_rms;
  memcpy(&raw_evm_rms, &tmp_evm_rms, sizeof(tmp_evm_rms));
  if (raw_evm_rms != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_evm_rms(), target);
  }

  // float evm_max = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_evm_max = this->_internal_evm_max();
  ::uint32_t raw_evm_max;
  memcpy(&raw_evm_max, &tmp_evm_max, sizeof(tmp_evm_max));
  if (raw_evm_max != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_evm_max(), target);
  }

  // float evm_min = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_evm_min = this->_internal_evm_min();
  ::uint32_t raw_evm_min;
  memcpy(&raw_evm_min, &tmp_evm_min, sizeof(tmp_evm_min));
  if (raw_evm_min != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_evm_min(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EVM)
  return target;
}

::size_t EVM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EVM)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string field = 1;
  if (!this->_internal_field().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_field());
  }

  // float evm_rms = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_evm_rms = this->_internal_evm_rms();
  ::uint32_t raw_evm_rms;
  memcpy(&raw_evm_rms, &tmp_evm_rms, sizeof(tmp_evm_rms));
  if (raw_evm_rms != 0) {
    total_size += 5;
  }

  // float evm_max = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_evm_max = this->_internal_evm_max();
  ::uint32_t raw_evm_max;
  memcpy(&raw_evm_max, &tmp_evm_max, sizeof(tmp_evm_max));
  if (raw_evm_max != 0) {
    total_size += 5;
  }

  // float evm_min = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_evm_min = this->_internal_evm_min();
  ::uint32_t raw_evm_min;
  memcpy(&raw_evm_min, &tmp_evm_min, sizeof(tmp_evm_min));
  if (raw_evm_min != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EVM::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EVM*>(&to_msg);
  auto& from = static_cast<const EVM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EVM)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field().empty()) {
    _this->_internal_set_field(from._internal_field());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_evm_rms = from._internal_evm_rms();
  ::uint32_t raw_evm_rms;
  memcpy(&raw_evm_rms, &tmp_evm_rms, sizeof(tmp_evm_rms));
  if (raw_evm_rms != 0) {
    _this->_impl_.evm_rms_ = from._impl_.evm_rms_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_evm_max = from._internal_evm_max();
  ::uint32_t raw_evm_max;
  memcpy(&raw_evm_max, &tmp_evm_max, sizeof(tmp_evm_max));
  if (raw_evm_max != 0) {
    _this->_impl_.evm_max_ = from._impl_.evm_max_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_evm_min = from._internal_evm_min();
  ::uint32_t raw_evm_min;
  memcpy(&raw_evm_min, &tmp_evm_min, sizeof(tmp_evm_min));
  if (raw_evm_min != 0) {
    _this->_impl_.evm_min_ = from._impl_.evm_min_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EVM::CopyFrom(const EVM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EVM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EVM::InternalSwap(EVM* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_, &other->_impl_.field_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EVM, _impl_.evm_min_)
      + sizeof(EVM::_impl_.evm_min_)
      - PROTOBUF_FIELD_OFFSET(EVM, _impl_.evm_rms_)>(
          reinterpret_cast<char*>(&_impl_.evm_rms_),
          reinterpret_cast<char*>(&other->_impl_.evm_rms_));
}

::google::protobuf::Metadata EVM::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class constellation::_Internal {
 public:
};

constellation::constellation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:constellation)
}
inline PROTOBUF_NDEBUG_INLINE constellation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::constellation& from_msg)
      : real_{visibility, arena, from.real_},
        imag_{visibility, arena, from.imag_},
        ref_real_{visibility, arena, from.ref_real_},
        ref_imag_{visibility, arena, from.ref_imag_},
        field_(arena, from.field_),
        _cached_size_{0} {}

constellation::constellation(
    ::google::protobuf::Arena* arena,
    const constellation& from)
    : ::google::protobuf::Message(arena) {
  constellation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:constellation)
}
inline PROTOBUF_NDEBUG_INLINE constellation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : real_{visibility, arena},
        imag_{visibility, arena},
        ref_real_{visibility, arena},
        ref_imag_{visibility, arena},
        field_(arena),
        _cached_size_{0} {}

inline void constellation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
constellation::~constellation() {
  // @@protoc_insertion_point(destructor:constellation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void constellation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.field_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
constellation::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(constellation, _impl_._cached_size_),
              false,
          },
          &constellation::MergeImpl,
          &constellation::kDescriptorMethods,
          &descriptor_table_result_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 27, 2> constellation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_constellation_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::constellation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string field = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(constellation, _impl_.field_)}},
    // repeated float real = 2;
    {::_pbi::TcParser::FastF32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(constellation, _impl_.real_)}},
    // repeated float imag = 3;
    {::_pbi::TcParser::FastF32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(constellation, _impl_.imag_)}},
    // repeated float ref_real = 4;
    {::_pbi::TcParser::FastF32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(constellation, _impl_.ref_real_)}},
    // repeated float ref_imag = 5;
    {::_pbi::TcParser::FastF32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(constellation, _impl_.ref_imag_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string field = 1;
    {PROTOBUF_FIELD_OFFSET(constellation, _impl_.field_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated float real = 2;
    {PROTOBUF_FIELD_OFFSET(constellation, _impl_.real_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float imag = 3;
    {PROTOBUF_FIELD_OFFSET(constellation, _impl_.imag_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float ref_real = 4;
    {PROTOBUF_FIELD_OFFSET(constellation, _impl_.ref_real_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float ref_imag = 5;
    {PROTOBUF_FIELD_OFFSET(constellation, _impl_.ref_imag_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
    "\15\5\0\0\0\0\0\0"
    "constellation"
    "field"
  }},
};

PROTOBUF_NOINLINE void constellation::Clear() {
// @@protoc_insertion_point(message_clear_start:constellation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.real_.Clear();
  _impl_.imag_.Clear();
  _impl_.ref_real_.Clear();
  _impl_.ref_imag_.Clear();
  _impl_.field_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* constellation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:constellation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    const std::string& _s = this->_internal_field();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "constellation.field");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated float real = 2;
  if (this->_internal_real_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_real(), target);
  }

  // repeated float imag = 3;
  if (this->_internal_imag_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_imag(), target);
  }

  // repeated float ref_real = 4;
  if (this->_internal_ref_real_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_ref_real(), target);
  }

  // repeated float ref_imag = 5;
  if (this->_internal_ref_imag_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_ref_imag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:constellation)
  return target;
}

::size_t constellation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:constellation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated float real = 2;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_real_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float imag = 3;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_imag_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float ref_real = 4;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_ref_real_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float ref_imag = 5;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_ref_imag_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string field = 1;
  if (!this->_internal_field().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_field());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void constellation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<constellation*>(&to_msg);
  auto& from = static_cast<const constellation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:constellation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_real()->MergeFrom(from._internal_real());
  _this->_internal_mutable_imag()->MergeFrom(from._internal_imag());
  _this->_internal_mutable_ref_real()->MergeFrom(from._internal_ref_real());
  _this->_internal_mutable_ref_imag()->MergeFrom(from._internal_ref_imag());
  if (!from._internal_field().empty()) {
    _this->_internal_set_field(from._internal_field());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void constellation::CopyFrom(const constellation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:constellation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void constellation::InternalSwap(constellation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.real_.InternalSwap(&other->_impl_.real_);
  _impl_.imag_.InternalSwap(&other->_impl_.imag_);
  _impl_.ref_real_.InternalSwap(&other->_impl_.ref_real_);
  _impl_.ref_imag_.InternalSwap(&other->_impl_.ref_imag_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.field_, &other->_impl_.field_, arena);
}

::google::protobuf::Metadata constellation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class result::_Internal {
 public:
};

result::result(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:result)
}
inline PROTOBUF_NDEBUG_INLINE result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::result& from_msg)
      : spectrum_{visibility, arena, from.spectrum_},
        evm_res_{visibility, arena, from.evm_res_},
        evm_vs_symbol_{visibility, arena, from.evm_vs_symbol_},
        evm_vs_rb_{visibility, arena, from.evm_vs_rb_},
        constellation_data_{visibility, arena, from.constellation_data_},
        _cached_size_{0} {}

result::result(
    ::google::protobuf::Arena* arena,
    const result& from)
    : ::google::protobuf::Message(arena) {
  result* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:result)
}
inline PROTOBUF_NDEBUG_INLINE result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : spectrum_{visibility, arena},
        evm_res_{visibility, arena},
        evm_vs_symbol_{visibility, arena},
        evm_vs_rb_{visibility, arena},
        constellation_data_{visibility, arena},
        _cached_size_{0} {}

inline void result::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
result::~result() {
  // @@protoc_insertion_point(destructor:result)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void result::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
result::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(result, _impl_._cached_size_),
              false,
          },
          &result::MergeImpl,
          &result::kDescriptorMethods,
          &descriptor_table_result_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> result::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_result_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::result>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated float spectrum = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(result, _impl_.spectrum_)}},
    // repeated .EVM evm_res = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(result, _impl_.evm_res_)}},
    // repeated float evm_vs_symbol = 3;
    {::_pbi::TcParser::FastF32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(result, _impl_.evm_vs_symbol_)}},
    // repeated float evm_vs_rb = 4;
    {::_pbi::TcParser::FastF32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(result, _impl_.evm_vs_rb_)}},
    // repeated .constellation constellation_data = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(result, _impl_.constellation_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float spectrum = 1;
    {PROTOBUF_FIELD_OFFSET(result, _impl_.spectrum_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated .EVM evm_res = 2;
    {PROTOBUF_FIELD_OFFSET(result, _impl_.evm_res_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated float evm_vs_symbol = 3;
    {PROTOBUF_FIELD_OFFSET(result, _impl_.evm_vs_symbol_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated float evm_vs_rb = 4;
    {PROTOBUF_FIELD_OFFSET(result, _impl_.evm_vs_rb_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // repeated .constellation constellation_data = 5;
    {PROTOBUF_FIELD_OFFSET(result, _impl_.constellation_data_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::EVM>()},
    {::_pbi::TcParser::GetTable<::constellation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void result::Clear() {
// @@protoc_insertion_point(message_clear_start:result)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spectrum_.Clear();
  _impl_.evm_res_.Clear();
  _impl_.evm_vs_symbol_.Clear();
  _impl_.evm_vs_rb_.Clear();
  _impl_.constellation_data_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* result::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:result)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float spectrum = 1;
  if (this->_internal_spectrum_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_spectrum(), target);
  }

  // repeated .EVM evm_res = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_evm_res_size());
       i < n; i++) {
    const auto& repfield = this->_internal_evm_res().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated float evm_vs_symbol = 3;
  if (this->_internal_evm_vs_symbol_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_evm_vs_symbol(), target);
  }

  // repeated float evm_vs_rb = 4;
  if (this->_internal_evm_vs_rb_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_evm_vs_rb(), target);
  }

  // repeated .constellation constellation_data = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_constellation_data_size());
       i < n; i++) {
    const auto& repfield = this->_internal_constellation_data().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:result)
  return target;
}

::size_t result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:result)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated float spectrum = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_spectrum_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .EVM evm_res = 2;
  total_size += 1UL * this->_internal_evm_res_size();
  for (const auto& msg : this->_internal_evm_res()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated float evm_vs_symbol = 3;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_evm_vs_symbol_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated float evm_vs_rb = 4;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_evm_vs_rb_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .constellation constellation_data = 5;
  total_size += 1UL * this->_internal_constellation_data_size();
  for (const auto& msg : this->_internal_constellation_data()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void result::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<result*>(&to_msg);
  auto& from = static_cast<const result&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:result)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_spectrum()->MergeFrom(from._internal_spectrum());
  _this->_internal_mutable_evm_res()->MergeFrom(
      from._internal_evm_res());
  _this->_internal_mutable_evm_vs_symbol()->MergeFrom(from._internal_evm_vs_symbol());
  _this->_internal_mutable_evm_vs_rb()->MergeFrom(from._internal_evm_vs_rb());
  _this->_internal_mutable_constellation_data()->MergeFrom(
      from._internal_constellation_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void result::CopyFrom(const result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void result::InternalSwap(result* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.spectrum_.InternalSwap(&other->_impl_.spectrum_);
  _impl_.evm_res_.InternalSwap(&other->_impl_.evm_res_);
  _impl_.evm_vs_symbol_.InternalSwap(&other->_impl_.evm_vs_symbol_);
  _impl_.evm_vs_rb_.InternalSwap(&other->_impl_.evm_vs_rb_);
  _impl_.constellation_data_.InternalSwap(&other->_impl_.constellation_data_);
}

::google::protobuf::Metadata result::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_result_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
